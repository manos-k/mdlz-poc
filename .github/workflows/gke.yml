# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the master branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Deploy React app to GKE

on:
  push:
    branches:
      - master
      - gke_test

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: kube-cluster
  GKE_ZONE: us-central1-c
  SHA: ${ GITHUB_SHA:10 }

jobs:
  publish-to-hub:
    name: Publish to dockerhub
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:10})
      - name: Echo step 1
        run: ls /home/runner/work/mdlz-poc/mdlz-poc
      - name: Echo step 2
        run: ls /home/runner/work/mdlz-poc/mdlz-poc/fast-api
      - name: Echo step 3
        run: ls /home/runner/work/mdlz-poc/mdlz-poc/test-api-calls
      - name: Running deploy script
        run: |-
          docker build -t manosk/multi-ui-k8s:latest -t manosk/multi-ui-k8s:${{steps.vars.outputs.tag}} -f ./test-api-calls/Dockerfile ./test-api-calls
          docker build -t manosk/multi-api-k8s:latest -t manosk/multi-api-k8s:${{steps.vars.outputs.tag}} -f ./fast-api/Dockerfile ./fast-api
          docker push manosk/multi-ui-k8s:latest
          docker push manosk/multi-api-k8s:latest
          docker push manosk/multi-ui-k8s:${{steps.vars.outputs.tag}}
          docker push manosk/multi-api-k8s:${{steps.vars.outputs.tag}}
  setup-and-deploy:
    name: Setup and Deploy to k8s
    needs: publish-to-hub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
          project_id: ${{ secrets.GKE_PROJECT }}

      # Get the GKE credentials so we can deploy to the cluster
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          kubectl apply -f k8s/
          kubectl set image deployments/api api=manosk/multi-api-k8s:${{steps.vars.outputs.tag}}
          kubectl set image deployments/ui ui=manosk/multi-ui-k8s:${{steps.vars.outputs.tag}}
          kubectl get services -o wide